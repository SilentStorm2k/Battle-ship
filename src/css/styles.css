/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* 2. Remove default margin */
* {
    margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
    html {
        interpolate-size: allow-keywords;
    }
}

body {
    /* 4. Add accessible line-height */
    line-height: 1.5;
    /* 5. Improve text rendering */
    -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
    font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
    text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
    isolation: isolate;
}

main {
    font-family: system-ui, sans-serif;
    background: linear-gradient(135deg, #001f3f, #003366);
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    gap: 5rem;
    padding: 1rem;
}

h1 {
    text-align: center;
}

.gameContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1;
    width: 100%;
    gap: 1rem;
}

.player {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    align-items: center;
    justify-content: center;
    margin-bottom: 2rem;
    height: 100%;
    width: 100%;
}

/* Player Names */
.player h1 {
    flex: 1;
    font-size: 1.5rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: #7fdbff;
    text-align: center;
}

/* Game Boards */
.gameBoard {
    display: grid;
    grid-template-rows: repeat(10, minmax(30px, 1fr));
    grid-template-columns: repeat(10, minmax(30px, 1fr));
    width: 100%;
    height: 100%;
    aspect-ratio: 1 / 1;
    max-width: 600px;

    flex: 10;
    border: 2px solid rgba(0, 191, 255, 0.4);
    border-radius: 6px;
}

.gameBoard > button {
    margin: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.9rem;
    cursor: crosshair;
    transition: background-color 0.25s ease;
    border-radius: 0%;
    border: 1px solid rgba(0, 191, 255, 0.15);
    background-color: rgba(0, 50, 100, 0.3);
    color: #7fdbff;
}

/* Button specific states */
.gameBoard > button:hover {
    background-color: rgba(0, 191, 255, 0.25);
}
.gameBoard > button:active {
    background-color: rgba(0, 191, 255, 0.4);
}

@keyframes radarPulse {
    0% {
        box-shadow: 0 0 0 0 rgba(46, 204, 64, 0.7);
    }
    70% {
        box-shadow: 0 0 15px 15px rgba(46, 204, 64, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(46, 204, 64, 0);
    }
}
@keyframes explosion {
    0% {
        transform: scale(1);
        background-color: #ff4136;
    }
    50% {
        transform: scale(1.3);
        background-color: #ff6347;
    }
    100% {
        transform: scale(1);
        background-color: #85144b;
    }
}

.highlight {
    background-color: #2ecc40 !important;
    animation: radarPulse 1.5s infinite;
}
.invalid {
    background-color: #ff4136 !important; /* danger red */
}
.ship {
    background-color: #0074d9 !important; /* naval blue */
}
.hit {
    background-color: #85144b !important;
    animation: explosion 0.4s ease;
}
.missed {
    background-color: #39cccc !important; /* water splash */
}

/* Buttons */
button {
    background: #0074d9;
    color: #fff;
    border: none;
    border-radius: 8px;
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
    transition:
        transform 0.15s ease,
        background 0.25s ease;
}
button:hover {
    background: #339af0;
}
button:active {
    background: #005fa3;
}

/* Controls */
.controlButtons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 5rem;
}

.controlButtons button {
    padding: 1rem;
}

/* Hover/Active states for tile buttons */
.controlButtons button:hover {
    background-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
}
.controlButtons button:active {
    transform: translateY(-2px);
    background-color: rgba(255, 255, 255, 0.4);
}

.landing-page {
    display: flex;
    flex-direction: column;
}

/* Form Container */
form {
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
    max-width: 360px;
    margin: 2rem auto;
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    font-family: system-ui, sans-serif;
    background: rgba(0, 51, 102, 0.6);
    color: #7fdbff;
}

/* Each Input Row */
form div {
    display: flex;
    flex-direction: column;
    gap: 0.4rem;
}

/* Labels */
form label {
    font-size: 0.95rem;
    font-weight: bold;
    letter-spacing: 0.5px;
    color: #7fdbff;
}

/* Text Inputs & Selects */
form input[type='text'],
form select {
    padding: 0.6rem 0.8rem;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    background: rgba(0, 191, 255, 0.15);
    color: #fff;
    outline: none;
    transition:
        background-color 0.25s ease,
        box-shadow 0.25s ease;
}

/* Placeholder text */
form input::placeholder {
    color: rgba(255, 255, 255, 0.6);
}

/* Focus state */
form input:focus,
form select:focus {
    background: rgba(0, 191, 255, 0.25);
    box-shadow: 0 0 6px rgba(0, 191, 255, 0.7);
}

/* Submit Button */
form button {
    background: #0074d9;
    color: #fff;
    border: none;
    padding: 0.8rem 1rem;
    border-radius: 10px;
    font-size: 1rem;
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
    transition:
        background 0.3s ease,
        transform 0.15s ease;
}

/* Hover/Active button effects */
form button:hover {
    background: #339af0;
    transform: translateY(-2px);
}
form button:active {
    transform: translateY(0);
    background: #005fa3;
}

.custom-alert {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 51, 102, 0.95);
    color: #7fdbff;
    padding: 2rem 3rem;
    border-radius: 16px;
    text-align: center;
    font-size: 1.5rem;
    font-weight: bold;
    box-shadow: 0 0 25px rgba(0, 191, 255, 0.7);
    z-index: 9999;
    animation:
        fadeIn 0.3s ease,
        radarPulse 2s infinite;
}

.custom-alert button {
    margin-top: 1.5rem;
    padding: 0.8rem 1.4rem;
    font-size: 1rem;
    border-radius: 10px;
    border: none;
    cursor: pointer;
    background: #0074d9;
    color: #fff;
    font-weight: bold;
    transition:
        background 0.3s ease,
        transform 0.2s ease;
}
.custom-alert button:hover {
    background: #339af0;
    transform: translateY(-2px);
}
.custom-alert button:active {
    background: #005fa3;
    transform: translateY(0);
}

/* Fade animation */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

#divider {
    white-space: pre-line;
    word-wrap: break-word;
    line-height: 1.4rem;
    width: 220px;
    background: rgba(0, 51, 102, 0.85);
    color: #7fdbff;
    padding: 0.6rem 1rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    text-align: center;
    box-shadow: 0 0 12px rgba(0, 191, 255, 0.4);
    margin: 1rem auto;
    display: inline-block;
    position: relative;
}

/* Little tooltip arrow */
#divider::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 8px 8px 0 8px;
    border-style: solid;
    border-color: rgba(0, 51, 102, 0.85) transparent transparent transparent;
}

/* subtle glow pulse when turn changes */
@keyframes dividerPulse {
    0% {
        box-shadow: 0 0 8px rgba(0, 191, 255, 0.4);
    }
    50% {
        box-shadow: 0 0 18px rgba(0, 191, 255, 0.7);
    }
    100% {
        box-shadow: 0 0 8px rgba(0, 191, 255, 0.4);
    }
}
#divider.turn-change {
    animation: dividerPulse 1.2s ease infinite;
}

@media screen and (max-width: 1300px) {
    .gameContainer {
        flex-direction: column;
    }
}
